// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Primitive types Constraints composition allows to add additional constraints 1`] = `
Array [
  Object {
    "kind": "biggerOrEqThan",
    "message": "biggerOrEqThan: 50",
    "params": 50,
    "paths": Array [],
  },
]
`;

exports[`Primitive types Constraints composition allows to add additional constraints 2`] = `
Array [
  Object {
    "kind": "number",
    "message": "number: no params",
    "params": undefined,
    "paths": Array [],
  },
]
`;

exports[`Primitive types Constraints composition allows to add additional constraints 3`] = `
Array [
  Object {
    "kind": "number",
    "message": "number: no params",
    "params": undefined,
    "paths": Array [],
  },
]
`;

exports[`Primitive types Constraints composition throws non matching defaults error 1`] = `"Empty path: biggerOrEqThan: 5"`;

exports[`Primitive types Type widening primitive types can be nullable 1`] = `
Array [
  Object {
    "kind": "number",
    "message": "number: no params",
    "params": undefined,
    "paths": Array [],
  },
  Object {
    "kind": "nil",
    "message": "nil: no params",
    "params": undefined,
    "paths": Array [],
  },
]
`;

exports[`Primitive types Validates and generates defaults allows to override error message 1`] = `
Array [
  Object {
    "kind": "biggerOrEqThan",
    "message": "Should be greater than 10",
    "params": 10,
    "paths": Array [],
  },
]
`;

exports[`Primitive types Validates and generates defaults allows to override error message 2`] = `
Array [
  Object {
    "kind": "dividableBy",
    "message": "Should be dividable by 2",
    "params": 2,
    "paths": Array [],
  },
]
`;

exports[`Primitive types Validates and generates defaults allows to override error message 3`] = `
Array [
  Object {
    "kind": "dividableBy",
    "message": "Please, provide value dividable by 2",
    "params": 2,
    "paths": Array [],
  },
]
`;

exports[`Primitive types Validates and generates defaults allows to override error message 4`] = `
Array [
  Object {
    "kind": "dividableBy",
    "message": "Should be dividable by 5",
    "params": 5,
    "paths": Array [],
  },
]
`;

exports[`Primitive types Validates and generates defaults narrows in assertion like manner 1`] = `"Empty path: number: no params"`;

exports[`Primitive types Validates and generates defaults validates with static checking 1`] = `
Array [
  Object {
    "kind": "number",
    "message": "number: no params",
    "params": undefined,
    "paths": Array [],
  },
]
`;
